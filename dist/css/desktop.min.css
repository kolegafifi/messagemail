@media (min-width:992px){.nav__burger{display:none}.nav__center{display:flex;justify-content:center;align-items:center;gap:2em}.nav__option{font-size:1.8rem;font-weight:500;color:#414141}.nav__option:hover{color:#000}.header .wrapper{display:flex;flex-direction:row;justify-content:space-between;gap:5em}.header .header__left{display:flex;flex-direction:column;align-items:flex-start}.header__headline{font-size:5.6rem;text-align:left;max-width:600px}.header__subheadline{font-size:2rem;text-align:left;max-width:550px}.header__hero-img{max-width:460px;max-height:460px;width:100%}.header .cta-left{display:flex;margin-top:5.2em}.header .cta-bot{display:none}.about__text{font-size:2.2rem}.features__container{width:95%}.features__feature__img{max-width:390px;width:70%}.features__feature__text{font-size:2.2rem;text-align:center}.features__feature__text span{color:#1370fc}.footer__right{align-items:flex-start;flex-direction:row;gap:6em}.footer__address{font-size:1.8rem}.footer__about-app{margin-top:0}.section-title{font-size:4rem}}@media (min-width:1100px){.header__headline{font-size:6.4rem;text-align:left;max-width:600px}.header__subheadline{font-size:2.2rem;text-align:left;max-width:550px}.header__hero-img{max-width:500px;max-height:500px;width:100%}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlc2t0b3Auc2NzcyIsImRlc2t0b3AuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHlCQUVFLGFBQ0MsWUFBQSxDQ0FELEFERUEsYUFDQyxhQUFBLEFBQ0EsdUJBQUEsQUFDQSxtQkFBQSxBQUNBLE9BQUEsQ0NBRCxBREVBLGFBQ0MsaUJBQUEsQUFDQSxnQkFBQSxBQUNBLGFBQUEsQ0NBRCxBRENDLG1CQUNDLFVBQUEsQ0NDRixBRElBLGlCQUNDLGFBQUEsQUFDQSxtQkFBQSxBQUNBLDhCQUFBLEFBQ0EsT0FBQSxDQ0ZELEFESUEsc0JBQ0MsYUFBQSxBQUNBLHNCQUFBLEFBQ0Esc0JBQUEsQ0NGRCxBRElBLGtCQUNDLGlCQUFBLEFBQ0EsZ0JBQUEsQUFDQSxlQUFBLENDRkQsQURJQSxxQkFDQyxlQUFBLEFBQ0EsZ0JBQUEsQUFDQSxlQUFBLENDRkQsQURJQSxrQkFDQyxnQkFBQSxBQUNBLGlCQUFBLEFBQ0EsVUFBQSxDQ0ZELEFESUEsa0JBQ0MsYUFBQSxBQUNBLGdCQUFBLENDRkQsQURJQSxpQkFDQyxZQUFBLENDRkQsQURNTSxhQUNJLGdCQUFBLENDSlYsQURRTSxxQkFDSSxTQUFBLENDTlYsQURTVSx3QkFDSSxnQkFBQSxBQUNBLFNBQUEsQ0NQZCxBRFNVLHlCQUNJLGlCQUFBLEFBQ0EsaUJBQUEsQ0NQZCxBRFFjLDhCQUNJLGFBQUEsQ0NObEIsQURZQSxlQUNVLHVCQUFBLEFBQ1QsbUJBQUEsQUFDUyxPQUFBLENDVlYsQURZQSxpQkFDQyxnQkFBQSxDQ1ZELEFEWUEsbUJBQ0MsWUFBQSxDQ1ZELEFEYUQsZUFDQyxjQUFBLENDWEEsQ0FDRixBRGFBLDBCQUVFLGtCQUNDLGlCQUFBLEFBQ0EsZ0JBQUEsQUFDQSxlQUFBLENDWkQsQURjQSxxQkFDQyxpQkFBQSxBQUNBLGdCQUFBLEFBQ0EsZUFBQSxDQ1pELEFEY0Esa0JBQ0MsZ0JBQUEsQUFDQSxpQkFBQSxBQUNBLFVBQUEsQ0NaRCxDQUNGIiwiZmlsZSI6ImRlc2t0b3AubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuXHQubmF2IHtcblx0XHQmX19idXJnZXIge1xuXHRcdFx0ZGlzcGxheTogbm9uZTtcblx0XHR9XG5cdFx0Jl9fY2VudGVyIHtcblx0XHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblx0XHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdFx0XHRnYXA6IDJlbTtcblx0XHR9XG5cdFx0Jl9fb3B0aW9uIHtcblx0XHRcdGZvbnQtc2l6ZTogMS44cmVtO1xuXHRcdFx0Zm9udC13ZWlnaHQ6IDUwMDtcblx0XHRcdGNvbG9yOiByZ2IoNjUsIDY1LCA2NSk7XG5cdFx0XHQmOmhvdmVye1xuXHRcdFx0XHRjb2xvcjogYmxhY2s7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cdC5oZWFkZXIge1xuXHRcdC53cmFwcGVyIHtcblx0XHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0XHRmbGV4LWRpcmVjdGlvbjogcm93O1xuXHRcdFx0anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuXHRcdFx0Z2FwOiA1ZW07XG5cdFx0fVxuXHRcdC5oZWFkZXJfX2xlZnQge1xuXHRcdFx0ZGlzcGxheTogZmxleDtcblx0XHRcdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cdFx0XHRhbGlnbi1pdGVtczogZmxleC1zdGFydDtcblx0XHR9XG5cdFx0Jl9faGVhZGxpbmUge1xuXHRcdFx0Zm9udC1zaXplOiA1LjZyZW07XG5cdFx0XHR0ZXh0LWFsaWduOiBsZWZ0O1xuXHRcdFx0bWF4LXdpZHRoOiA2MDBweDtcblx0XHR9XG5cdFx0Jl9fc3ViaGVhZGxpbmUge1xuXHRcdFx0Zm9udC1zaXplOiAycmVtO1xuXHRcdFx0dGV4dC1hbGlnbjogbGVmdDtcblx0XHRcdG1heC13aWR0aDogNTUwcHg7XG5cdFx0fVxuXHRcdCZfX2hlcm8taW1nIHtcblx0XHRcdG1heC13aWR0aDogNDYwcHg7XG5cdFx0XHRtYXgtaGVpZ2h0OiA0NjBweDtcblx0XHRcdHdpZHRoOiAxMDAlO1xuXHRcdH1cblx0XHQuY3RhLWxlZnQge1xuXHRcdFx0ZGlzcGxheTogZmxleDtcblx0XHRcdG1hcmdpbi10b3A6IDUuMmVtO1xuXHRcdH1cblx0XHQuY3RhLWJvdCB7XG5cdFx0XHRkaXNwbGF5OiBub25lO1xuXHRcdH1cblx0fVxuICAgIC5hYm91dHtcbiAgICAgICAgJl9fdGV4dHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMi4ycmVtO1xuICAgICAgICB9XG4gICAgfVxuICAgIC5mZWF0dXJlc3tcbiAgICAgICAgJl9fY29udGFpbmVye1xuICAgICAgICAgICAgd2lkdGg6IDk1JTtcbiAgICAgICAgfVxuICAgICAgICAmX19mZWF0dXJlIHtcbiAgICAgICAgICAgICZfX2ltZyB7XG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAzOTBweDtcbiAgICAgICAgICAgICAgICB3aWR0aDogNzAlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJl9fdGV4dCB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyLjJyZW07XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzEzNzBmYztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLmZvb3RlciB7XG5cdFx0Jl9fcmlnaHQge1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG5cdFx0XHRmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICAgICAgZ2FwOiA2ZW07XG5cdFx0fVxuXHRcdCZfX2FkZHJlc3Mge1xuXHRcdFx0Zm9udC1zaXplOiAxLjhyZW07XG5cdFx0fVxuXHRcdCZfX2Fib3V0LWFwcCB7XG5cdFx0XHRtYXJnaW4tdG9wOiAwZW07XG5cdFx0fVxuXHR9XG5cdC5zZWN0aW9uLXRpdGxle1xuXHRcdGZvbnQtc2l6ZTogNHJlbTtcblx0fVxufVxuQG1lZGlhKG1pbi13aWR0aDogMTEwMHB4KXtcblx0LmhlYWRlcntcblx0XHQmX19oZWFkbGluZSB7XG5cdFx0XHRmb250LXNpemU6IDYuNHJlbTtcblx0XHRcdHRleHQtYWxpZ246IGxlZnQ7XG5cdFx0XHRtYXgtd2lkdGg6IDYwMHB4O1xuXHRcdH1cblx0XHQmX19zdWJoZWFkbGluZSB7XG5cdFx0XHRmb250LXNpemU6IDIuMnJlbTtcblx0XHRcdHRleHQtYWxpZ246IGxlZnQ7XG5cdFx0XHRtYXgtd2lkdGg6IDU1MHB4O1xuXHRcdH1cblx0XHQmX19oZXJvLWltZyB7XG5cdFx0XHRtYXgtd2lkdGg6IDUwMHB4O1xuXHRcdFx0bWF4LWhlaWdodDogNTAwcHg7XG5cdFx0XHR3aWR0aDogMTAwJTtcblx0XHR9XG5cdH1cbn0iLCJAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLm5hdl9fYnVyZ2VyIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5uYXZfX2NlbnRlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogMmVtO1xuICB9XG4gIC5uYXZfX29wdGlvbiB7XG4gICAgZm9udC1zaXplOiAxLjhyZW07XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBjb2xvcjogcmdiKDY1LCA2NSwgNjUpO1xuICB9XG4gIC5uYXZfX29wdGlvbjpob3ZlciB7XG4gICAgY29sb3I6IGJsYWNrO1xuICB9XG4gIC5oZWFkZXIgLndyYXBwZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgZ2FwOiA1ZW07XG4gIH1cbiAgLmhlYWRlciAuaGVhZGVyX19sZWZ0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIH1cbiAgLmhlYWRlcl9faGVhZGxpbmUge1xuICAgIGZvbnQtc2l6ZTogNS42cmVtO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgbWF4LXdpZHRoOiA2MDBweDtcbiAgfVxuICAuaGVhZGVyX19zdWJoZWFkbGluZSB7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgbWF4LXdpZHRoOiA1NTBweDtcbiAgfVxuICAuaGVhZGVyX19oZXJvLWltZyB7XG4gICAgbWF4LXdpZHRoOiA0NjBweDtcbiAgICBtYXgtaGVpZ2h0OiA0NjBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAuaGVhZGVyIC5jdGEtbGVmdCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBtYXJnaW4tdG9wOiA1LjJlbTtcbiAgfVxuICAuaGVhZGVyIC5jdGEtYm90IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5hYm91dF9fdGV4dCB7XG4gICAgZm9udC1zaXplOiAyLjJyZW07XG4gIH1cbiAgLmZlYXR1cmVzX19jb250YWluZXIge1xuICAgIHdpZHRoOiA5NSU7XG4gIH1cbiAgLmZlYXR1cmVzX19mZWF0dXJlX19pbWcge1xuICAgIG1heC13aWR0aDogMzkwcHg7XG4gICAgd2lkdGg6IDcwJTtcbiAgfVxuICAuZmVhdHVyZXNfX2ZlYXR1cmVfX3RleHQge1xuICAgIGZvbnQtc2l6ZTogMi4ycmVtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuICAuZmVhdHVyZXNfX2ZlYXR1cmVfX3RleHQgc3BhbiB7XG4gICAgY29sb3I6ICMxMzcwZmM7XG4gIH1cbiAgLmZvb3Rlcl9fcmlnaHQge1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgZ2FwOiA2ZW07XG4gIH1cbiAgLmZvb3Rlcl9fYWRkcmVzcyB7XG4gICAgZm9udC1zaXplOiAxLjhyZW07XG4gIH1cbiAgLmZvb3Rlcl9fYWJvdXQtYXBwIHtcbiAgICBtYXJnaW4tdG9wOiAwZW07XG4gIH1cbiAgLnNlY3Rpb24tdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogNHJlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDExMDBweCkge1xuICAuaGVhZGVyX19oZWFkbGluZSB7XG4gICAgZm9udC1zaXplOiA2LjRyZW07XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBtYXgtd2lkdGg6IDYwMHB4O1xuICB9XG4gIC5oZWFkZXJfX3N1YmhlYWRsaW5lIHtcbiAgICBmb250LXNpemU6IDIuMnJlbTtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIG1heC13aWR0aDogNTUwcHg7XG4gIH1cbiAgLmhlYWRlcl9faGVyby1pbWcge1xuICAgIG1heC13aWR0aDogNTAwcHg7XG4gICAgbWF4LWhlaWdodDogNTAwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn0iXX0= */
